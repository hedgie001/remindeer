"main";_9e0‍.e([["Note",()=>Note],["NoteStore",()=>NoteStore],["noteStore",()=>noteStore]]);let Datastore;_9e0‍.w('nedb-promise',[["default",function(v){Datastore=v}]]);

class Note {
    constructor(title, description, date, importance) {
        this.title = title;
        this.description = description;
        this.date = date;
        this.created = new Date();
        this.state = "OK";
    }
}

class NoteStore {
    constructor(db) {
        this.db = db || new Datastore({filename: './data/notes.db', autoload: true});
    }

    async add(title, description, date, importance) {
        let note = new Note(title, description, date, importance);
        return await this.db.insert(note);
    }

    async delete(id) {
        await this.db.update({_id: id}, {$set: {"state": "DELETED"}});
        return await this.get(id);
    }

    async get(id) {
        return await this.db.findOne({_id: id});
    }

    async all() {
        return await this.db.cfind().sort({ orderDate: -1 }).exec();
    }
}

const noteStore = new NoteStore();
